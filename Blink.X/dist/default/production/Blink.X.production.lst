

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jul 05 13:48:58 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F676 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   116                           CMCON equ 019h ;# 
   117  0019                     # 559 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   118                           ADRESH equ 01Eh ;# 
   119  001E                     # 566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   120                           ADCON0 equ 01Fh ;# 
   121  001F                     # 656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   122                           OPTION_REG equ 081h ;# 
   123  0081                     # 733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   124                           TRISA equ 085h ;# 
   125  0085                     # 783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   126                           TRISC equ 087h ;# 
   127  0087                     # 833 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   128                           PIE1 equ 08Ch ;# 
   129  008C                     # 881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   130                           PCON equ 08Eh ;# 
   131  008E                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   132                           OSCCAL equ 090h ;# 
   133  0090                     # 975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   134                           ANSEL equ 091h ;# 
   135  0091                     # 1037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   136                           WPUA equ 095h ;# 
   137  0095                     # 1042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   138                           WPU equ 095h ;# 
   139  0095                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   140                           IOCA equ 096h ;# 
   141  0096                     # 1130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   142                           IOC equ 096h ;# 
   143  0096                     # 1223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   144                           VRCON equ 099h ;# 
   145  0099                     # 1283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   146                           EEDAT equ 09Ah ;# 
   147  009A                     # 1288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   148                           EEDATA equ 09Ah ;# 
   149  009A                     # 1321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   150                           EEADR equ 09Bh ;# 
   151  009B                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   152                           EECON1 equ 09Ch ;# 
   153  009C                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   154                           EECON2 equ 09Dh ;# 
   155  009D                     # 1373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   156                           ADRESL equ 09Eh ;# 
   157  009E                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   158                           ADCON1 equ 09Fh ;# 
   159  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   160                           INDF equ 00h ;# 
   161  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   162                           TMR0 equ 01h ;# 
   163  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   164                           PCL equ 02h ;# 
   165  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   166                           STATUS equ 03h ;# 
   167  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   168                           FSR equ 04h ;# 
   169  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   170                           PORTA equ 05h ;# 
   171  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   172                           PORTC equ 07h ;# 
   173  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   174                           PCLATH equ 0Ah ;# 
   175  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   176                           INTCON equ 0Bh ;# 
   177  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   178                           PIR1 equ 0Ch ;# 
   179  000C                     # 414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   180                           TMR1 equ 0Eh ;# 
   181  000E                     # 421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   182                           TMR1L equ 0Eh ;# 
   183  000E                     # 428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   184                           TMR1H equ 0Fh ;# 
   185  000F                     # 435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   186                           T1CON equ 010h ;# 
   187  0010                     # 500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   188                           CMCON equ 019h ;# 
   189  0019                     # 559 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   190                           ADRESH equ 01Eh ;# 
   191  001E                     # 566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   192                           ADCON0 equ 01Fh ;# 
   193  001F                     # 656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   194                           OPTION_REG equ 081h ;# 
   195  0081                     # 733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   196                           TRISA equ 085h ;# 
   197  0085                     # 783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   198                           TRISC equ 087h ;# 
   199  0087                     # 833 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   200                           PIE1 equ 08Ch ;# 
   201  008C                     # 881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   202                           PCON equ 08Eh ;# 
   203  008E                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   204                           OSCCAL equ 090h ;# 
   205  0090                     # 975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   206                           ANSEL equ 091h ;# 
   207  0091                     # 1037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   208                           WPUA equ 095h ;# 
   209  0095                     # 1042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   210                           WPU equ 095h ;# 
   211  0095                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   212                           IOCA equ 096h ;# 
   213  0096                     # 1130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   214                           IOC equ 096h ;# 
   215  0096                     # 1223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   216                           VRCON equ 099h ;# 
   217  0099                     # 1283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   218                           EEDAT equ 09Ah ;# 
   219  009A                     # 1288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   220                           EEDATA equ 09Ah ;# 
   221  009A                     # 1321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   222                           EEADR equ 09Bh ;# 
   223  009B                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   224                           EECON1 equ 09Ch ;# 
   225  009C                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   226                           EECON2 equ 09Dh ;# 
   227  009D                     # 1373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   228                           ADRESL equ 09Eh ;# 
   229  009E                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   230                           ADCON1 equ 09Fh ;# 
   231  009F                     	FNCALL	_main,_IOinit
   232                           	FNROOT	_main
   233                           	global	_PORTC
   234                           _PORTC	set	0x7
   235  0007                     	global	_PORTA
   236                           _PORTA	set	0x5
   237  0005                     	global	_RA0
   238                           _RA0	set	0x28
   239  0028                     	global	_TRISC
   240                           _TRISC	set	0x87
   241  0087                     	global	_TRISA
   242                           _TRISA	set	0x85
   243  0085                     ; #config settings
   244                           global __CFG_FOSC$INTRCIO
   245                           __CFG_FOSC$INTRCIO equ 0x0
   246  0000                     global __CFG_WDTE$OFF
   247                           __CFG_WDTE$OFF equ 0x0
   248  0000                     global __CFG_PWRTE$ON
   249                           __CFG_PWRTE$ON equ 0x0
   250  0000                     global __CFG_MCLRE$OFF
   251                           __CFG_MCLRE$OFF equ 0x0
   252  0000                     global __CFG_BOREN$ON
   253                           __CFG_BOREN$ON equ 0x0
   254  0000                     global __CFG_CP$OFF
   255                           __CFG_CP$OFF equ 0x0
   256  0000                     global __CFG_CPD$OFF
   257                           __CFG_CPD$OFF equ 0x0
   258  0000                     	file	"C:\Users\DHARMA~1\AppData\Local\Temp\sa3s."
   259                           	line	#
   260                           psect cinit,class=CODE,delta=2
   261                           global start_initialization
   262                           start_initialization:
   263  03FD                     
   264                           global __initialization
   265                           __initialization:
   266  03FD                     psect cinit,class=CODE,delta=2,merge=1
   267                           global end_of_initialization,__end_of__initialization
   268                           
   269                           ;End of C runtime variable initialization code
   270                           
   271                           end_of_initialization:
   272  03FD                     __end_of__initialization:
   273  03FD                     clrf status
   274  03FD  0183               ljmp _main	;jump to C main() function
   275  03FE  2BDE               psect	cstackCOMMON,class=COMMON,space=1,noexec
   276                           global __pcstackCOMMON
   277                           __pcstackCOMMON:
   278  0000                     ??_IOinit:	; 1 bytes @ 0x0
   279  0000                     psect	cstackBANK0,class=BANK0,space=1,noexec
   280                           global __pcstackBANK0
   281                           __pcstackBANK0:
   282  0020                     ?_IOinit:	; 1 bytes @ 0x0
   283  0020                     ?_main:	; 1 bytes @ 0x0
   284  0020                     ??_main:	; 1 bytes @ 0x0
   285  0020                     	ds	3
   286  0020                     	global	main@i
   287                           main@i:	; 1 bytes @ 0x3
   288  0023                     	ds	1
   289  0023                     ;!
   290                           ;!Data Sizes:
   291                           ;!    Strings     0
   292                           ;!    Constant    0
   293                           ;!    Data        0
   294                           ;!    BSS         0
   295                           ;!    Persistent  0
   296                           ;!    Stack       0
   297                           ;!
   298                           ;!Auto Spaces:
   299                           ;!    Space          Size  Autos    Used
   300                           ;!    COMMON            0      0       0
   301                           ;!    BANK0            62      4       4
   302                           
   303                           ;!
   304                           ;!Pointer List with Targets:
   305                           ;!
   306                           ;!    None.
   307                           
   308                           
   309                           ;!
   310                           ;!Critical Paths under _main in COMMON
   311                           ;!
   312                           ;!    None.
   313                           ;!
   314                           ;!Critical Paths under _main in BANK0
   315                           ;!
   316                           ;!    None.
   317                           
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   320 ;;
   321                           
   322                           ;!
   323                           ;!Call Graph Tables:
   324                           ;!
   325                           ;! ---------------------------------------------------------------------------------
   326                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   327                           ;! ---------------------------------------------------------------------------------
   328                           ;! (0) _main                                                 4     4      0      46
   329                           ;!                                              0 BANK0      4     4      0
   330                           ;!                             _IOinit
   331                           ;! ---------------------------------------------------------------------------------
   332                           ;! (1) _IOinit                                               0     0      0       0
   333                           ;! ---------------------------------------------------------------------------------
   334                           ;! Estimated maximum stack depth 1
   335                           ;! ---------------------------------------------------------------------------------
   336                           ;!
   337                           ;! Call Graph Graphs:
   338                           ;!
   339                           ;! _main (ROOT)
   340                           ;!   _IOinit
   341                           ;!
   342                           
   343                           ;! Address spaces:
   344                           
   345                           ;!Name               Size   Autos  Total    Cost      Usage
   346                           ;!BITCOMMON            0      0       0       0        0.0%
   347                           ;!EEDATA              80      0       0       0        0.0%
   348                           ;!NULL                 0      0       0       0        0.0%
   349                           ;!CODE                 0      0       0       0        0.0%
   350                           ;!BITSFR0              0      0       0       1        0.0%
   351                           ;!SFR0                 0      0       0       1        0.0%
   352                           ;!COMMON               0      0       0       1        0.0%
   353                           ;!BITSFR1              0      0       0       2        0.0%
   354                           ;!SFR1                 0      0       0       2        0.0%
   355                           ;!STACK                0      0       0       2        0.0%
   356                           ;!BITBANK0            3E      0       0       3        0.0%
   357                           ;!BANK0               3E      4       4       4        6.5%
   358                           ;!ABS                  0      0       0       5        0.0%
   359                           ;!DATA                 0      0       0       6        0.0%
   360                           
   361                           	global	_main
   362                           
   363 ;; *************** function _main *****************
   364 ;; Defined at:
   365 ;;		line 22 in file "blink.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;  i               1    3[BANK0 ] unsigned char 
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, status,2, status,0, pclath, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : B00/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0
   379 ;;      Params:         0       0
   380 ;;      Locals:         0       1
   381 ;;      Temps:          0       3
   382 ;;      Totals:         0       4
   383 ;;Total ram usage:        4 bytes
   384 ;; Hardware stack levels required when called:    1
   385 ;; This function calls:
   386 ;;		_IOinit
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   392                           	file	"blink.c"
   393                           	line	22
   394                           global __pmaintext
   395                           __pmaintext:	;psect for function _main
   396  03DE                     psect	maintext
   397                           	file	"blink.c"
   398                           	line	22
   399                           	global	__size_of_main
   400                           	__size_of_main	equ	__end_of_main-_main
   401  001F                     	
   402                           _main:	
   403  03DE                     ;incstack = 0
   404                           	opt	stack 7
   405                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   406                           	line	23
   407                           	
   408                           l610:	
   409  03DE                     ;blink.c: 23:     IOinit();
   410                           	fcall	_IOinit
   411  03DE  23D7               	line	24
   412                           	
   413                           l612:	
   414  03DF                     ;blink.c: 24:     uint8_t i = 1;
   415                           	bcf	status, 5	;RP0=0, select bank0
   416  03DF  1283               	clrf	(main@i)
   417  03E0  01A3               	incf	(main@i),f
   418  03E1  0AA3               	goto	l614
   419  03E2  2BE3               	line	25
   420                           ;blink.c: 25:     while(1){
   421                           	
   422                           l20:	
   423  03E3                     	line	26
   424                           	
   425                           l614:	
   426  03E3                     ;blink.c: 26:         RA0 = i;
   427                           	bcf	status, 5	;RP0=0, select bank0
   428  03E3  1283               	btfsc	(main@i),0
   429  03E4  1823               	goto	u31
   430  03E5  2BE7               	goto	u30
   431  03E6  2BEA               	
   432                           u31:
   433  03E7                     	bcf	status, 5	;RP0=0, select bank0
   434  03E7  1283               	bsf	(40/8),(40)&7	;volatile
   435  03E8  1405               	goto	u44
   436  03E9  2BEC               u30:
   437  03EA                     	bcf	status, 5	;RP0=0, select bank0
   438  03EA  1283               	bcf	(40/8),(40)&7	;volatile
   439  03EB  1005               u44:
   440  03EC                     	line	27
   441                           	
   442                           l616:	
   443  03EC                     ;blink.c: 27:         i = ~i;
   444                           	comf	(main@i),f
   445  03EC  09A3               	line	28
   446                           	
   447                           l618:	
   448  03ED                     ;blink.c: 28:         _delay((unsigned long)((500)*(4000000/4000.0)));
   449                           	opt asmopt_push
   450                           opt asmopt_off
   451                           movlw  3
   452  03ED  3003               movwf	((??_main+0)+0+2),f
   453  03EE  00A2               movlw	138
   454  03EF  308A               movwf	((??_main+0)+0+1),f
   455  03F0  00A1               	movlw	85
   456  03F1  3055               movwf	((??_main+0)+0),f
   457  03F2  00A0               	u57:
   458  03F3                     decfsz	((??_main+0)+0),f
   459  03F3  0BA0               	goto	u57
   460  03F4  2BF3               	decfsz	((??_main+0)+0+1),f
   461  03F5  0BA1               	goto	u57
   462  03F6  2BF3               	decfsz	((??_main+0)+0+2),f
   463  03F7  0BA2               	goto	u57
   464  03F8  2BF3               	nop2
   465  03F9  2BFA               opt asmopt_pop
   466                           
   467                           	goto	l614
   468  03FA  2BE3               	line	29
   469                           ;blink.c: 29:     }
   470                           	
   471                           l21:	
   472  03FB                     	goto	l614
   473  03FB  2BE3               	
   474                           l22:	
   475  03FC                     	line	31
   476                           ;blink.c: 30:     return;
   477                           	
   478                           l23:	
   479  03FC                     	global	start
   480                           	ljmp	start
   481  03FC  2800               	opt stack 0
   482                           GLOBAL	__end_of_main
   483                           	__end_of_main:
   484  03FD                     	signat	_main,89
   485                           	global	_IOinit
   486                           
   487 ;; *************** function _IOinit *****************
   488 ;; Defined at:
   489 ;;		line 15 in file "blink.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		status,2
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0
   503 ;;      Params:         0       0
   504 ;;      Locals:         0       0
   505 ;;      Temps:          0       0
   506 ;;      Totals:         0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_main
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   516                           	line	15
   517                           global __ptext1
   518                           __ptext1:	;psect for function _IOinit
   519  03D7                     psect	text1
   520                           	file	"blink.c"
   521                           	line	15
   522                           	global	__size_of_IOinit
   523                           	__size_of_IOinit	equ	__end_of_IOinit-_IOinit
   524  0007                     	
   525                           _IOinit:	
   526  03D7                     ;incstack = 0
   527                           	opt	stack 7
   528                           ; Regs used in _IOinit: [status,2]
   529                           	line	16
   530                           	
   531                           l608:	
   532  03D7                     ;blink.c: 16:     TRISA = 0;
   533                           	bsf	status, 5	;RP0=1, select bank1
   534  03D7  1683               	clrf	(133)^080h	;volatile
   535  03D8  0185               	line	17
   536                           ;blink.c: 17:     TRISC = 0;
   537                           	clrf	(135)^080h	;volatile
   538  03D9  0187               	line	18
   539                           ;blink.c: 18:     PORTA = 0;
   540                           	bcf	status, 5	;RP0=0, select bank0
   541  03DA  1283               	clrf	(5)	;volatile
   542  03DB  0185               	line	19
   543                           ;blink.c: 19:     PORTC = 0;
   544                           	clrf	(7)	;volatile
   545  03DC  0187               	line	20
   546                           	
   547                           l15:	
   548  03DD                     	return
   549  03DD  0008               	opt stack 0
   550                           GLOBAL	__end_of_IOinit
   551                           	__end_of_IOinit:
   552  03DE                     	signat	_IOinit,89
   553                           global	___latbits
   554                           ___latbits	equ	0
   555  0000                     	global	btemp
   556                           	btemp set 05Eh
   557  005E                     
   558                           	DABS	1,94,2	;btemp
   559                           	global	wtemp0
   560                           	wtemp0 set btemp+0
   561  005E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      4       4

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      46
                                              0 BANK0      4     4      0
                             _IOinit
 ---------------------------------------------------------------------------------
 (1) _IOinit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOinit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      4       4       4        6.5%
ABS                  0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jul 05 13:48:58 2019

            __CFG_CP$OFF 0000                       l20 03E3                       l21 03FB  
                     l22 03FC                       l15 03DD                       l23 03FC  
                     u30 03EA                       u31 03E7                       u44 03EC  
                     u57 03F3                      l610 03DE                      l612 03DF  
                    l614 03E3                      l608 03D7                      l616 03EC  
                    l618 03ED                      _RA0 0028             __CFG_CPD$OFF 0000  
                   _main 03DE                     btemp 005E            __CFG_BOREN$ON 0000  
                   start 0000                    ?_main 0020            __CFG_WDTE$OFF 0000  
                  _PORTA 0005                    _PORTC 0007                    _TRISA 0085  
                  _TRISC 0087            __CFG_PWRTE$ON 0000                    main@i 0023  
                  status 0003                    wtemp0 005E           __CFG_MCLRE$OFF 0000  
        __initialization 03FD             __end_of_main 03FD                   ??_main 0020  
                 _IOinit 03D7  __end_of__initialization 03FD           __pcstackCOMMON 0000  
                ?_IOinit 0020               __pmaintext 03DE          __size_of_IOinit 0007  
                __ptext1 03D7     end_of_initialization 03FD           __end_of_IOinit 03DE  
    start_initialization 03FD                 ??_IOinit 0000                ___latbits 0000  
          __pcstackBANK0 0020            __size_of_main 001F        __CFG_FOSC$INTRCIO 0000  
