

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jul 05 13:59:38 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F676 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   116                           CMCON equ 019h ;# 
   117  0019                     # 559 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   118                           ADRESH equ 01Eh ;# 
   119  001E                     # 566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   120                           ADCON0 equ 01Fh ;# 
   121  001F                     # 656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   122                           OPTION_REG equ 081h ;# 
   123  0081                     # 733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   124                           TRISA equ 085h ;# 
   125  0085                     # 783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   126                           TRISC equ 087h ;# 
   127  0087                     # 833 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   128                           PIE1 equ 08Ch ;# 
   129  008C                     # 881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   130                           PCON equ 08Eh ;# 
   131  008E                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   132                           OSCCAL equ 090h ;# 
   133  0090                     # 975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   134                           ANSEL equ 091h ;# 
   135  0091                     # 1037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   136                           WPUA equ 095h ;# 
   137  0095                     # 1042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   138                           WPU equ 095h ;# 
   139  0095                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   140                           IOCA equ 096h ;# 
   141  0096                     # 1130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   142                           IOC equ 096h ;# 
   143  0096                     # 1223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   144                           VRCON equ 099h ;# 
   145  0099                     # 1283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   146                           EEDAT equ 09Ah ;# 
   147  009A                     # 1288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   148                           EEDATA equ 09Ah ;# 
   149  009A                     # 1321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   150                           EEADR equ 09Bh ;# 
   151  009B                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   152                           EECON1 equ 09Ch ;# 
   153  009C                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   154                           EECON2 equ 09Dh ;# 
   155  009D                     # 1373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   156                           ADRESL equ 09Eh ;# 
   157  009E                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   158                           ADCON1 equ 09Fh ;# 
   159  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   160                           INDF equ 00h ;# 
   161  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   162                           TMR0 equ 01h ;# 
   163  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   164                           PCL equ 02h ;# 
   165  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   166                           STATUS equ 03h ;# 
   167  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   168                           FSR equ 04h ;# 
   169  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   170                           PORTA equ 05h ;# 
   171  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   172                           PORTC equ 07h ;# 
   173  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   174                           PCLATH equ 0Ah ;# 
   175  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   176                           INTCON equ 0Bh ;# 
   177  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   178                           PIR1 equ 0Ch ;# 
   179  000C                     # 414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   180                           TMR1 equ 0Eh ;# 
   181  000E                     # 421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   182                           TMR1L equ 0Eh ;# 
   183  000E                     # 428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   184                           TMR1H equ 0Fh ;# 
   185  000F                     # 435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   186                           T1CON equ 010h ;# 
   187  0010                     # 500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   188                           CMCON equ 019h ;# 
   189  0019                     # 559 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   190                           ADRESH equ 01Eh ;# 
   191  001E                     # 566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   192                           ADCON0 equ 01Fh ;# 
   193  001F                     # 656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   194                           OPTION_REG equ 081h ;# 
   195  0081                     # 733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   196                           TRISA equ 085h ;# 
   197  0085                     # 783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   198                           TRISC equ 087h ;# 
   199  0087                     # 833 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   200                           PIE1 equ 08Ch ;# 
   201  008C                     # 881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   202                           PCON equ 08Eh ;# 
   203  008E                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   204                           OSCCAL equ 090h ;# 
   205  0090                     # 975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   206                           ANSEL equ 091h ;# 
   207  0091                     # 1037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   208                           WPUA equ 095h ;# 
   209  0095                     # 1042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   210                           WPU equ 095h ;# 
   211  0095                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   212                           IOCA equ 096h ;# 
   213  0096                     # 1130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   214                           IOC equ 096h ;# 
   215  0096                     # 1223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   216                           VRCON equ 099h ;# 
   217  0099                     # 1283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   218                           EEDAT equ 09Ah ;# 
   219  009A                     # 1288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   220                           EEDATA equ 09Ah ;# 
   221  009A                     # 1321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   222                           EEADR equ 09Bh ;# 
   223  009B                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   224                           EECON1 equ 09Ch ;# 
   225  009C                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   226                           EECON2 equ 09Dh ;# 
   227  009D                     # 1373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   228                           ADRESL equ 09Eh ;# 
   229  009E                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   230                           ADCON1 equ 09Fh ;# 
   231  009F                     	FNCALL	_main,_IOinit
   232                           	FNCALL	_main,_timer0Init
   233                           	FNROOT	_main
   234                           	FNCALL	intlevel1,_ISR
   235                           	global	intlevel1
   236                           	FNROOT	intlevel1
   237                           	global	_i
   238                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   239                           global __pidataBANK0
   240                           __pidataBANK0:
   241  0040                     	file	"timer0.c"
   242                           	line	14
   243                           
   244                           ;initializer for _i
   245                           	retlw	01h
   246  0040  3401               	global	_TMR0
   247                           _TMR0	set	0x1
   248  0001                     	global	_PORTC
   249                           _PORTC	set	0x7
   250  0007                     	global	_PORTA
   251                           _PORTA	set	0x5
   252  0005                     	global	_RA0
   253                           _RA0	set	0x28
   254  0028                     	global	_GIE
   255                           _GIE	set	0x5F
   256  005F                     	global	_PEIE
   257                           _PEIE	set	0x5E
   258  005E                     	global	_T0IE
   259                           _T0IE	set	0x5D
   260  005D                     	global	_T0IF
   261                           _T0IF	set	0x5A
   262  005A                     	global	_TRISC
   263                           _TRISC	set	0x87
   264  0087                     	global	_TRISA
   265                           _TRISA	set	0x85
   266  0085                     	global	_PS2
   267                           _PS2	set	0x40A
   268  040A                     	global	_PS1
   269                           _PS1	set	0x409
   270  0409                     	global	_PS0
   271                           _PS0	set	0x408
   272  0408                     	global	_PSA
   273                           _PSA	set	0x40B
   274  040B                     	global	_T0SE
   275                           _T0SE	set	0x40C
   276  040C                     	global	_T0CS
   277                           _T0CS	set	0x40D
   278  040D                     ; #config settings
   279                           global __CFG_FOSC$INTRCIO
   280                           __CFG_FOSC$INTRCIO equ 0x0
   281  0000                     global __CFG_WDTE$OFF
   282                           __CFG_WDTE$OFF equ 0x0
   283  0000                     global __CFG_PWRTE$ON
   284                           __CFG_PWRTE$ON equ 0x0
   285  0000                     global __CFG_MCLRE$OFF
   286                           __CFG_MCLRE$OFF equ 0x0
   287  0000                     global __CFG_BOREN$ON
   288                           __CFG_BOREN$ON equ 0x0
   289  0000                     global __CFG_CP$OFF
   290                           __CFG_CP$OFF equ 0x0
   291  0000                     global __CFG_CPD$OFF
   292                           __CFG_CPD$OFF equ 0x0
   293  0000                     	file	"C:\Users\DHARMA~1\AppData\Local\Temp\s3i0."
   294                           	line	#
   295                           psect cinit,class=CODE,delta=2
   296                           global start_initialization
   297                           start_initialization:
   298  000C                     
   299                           global __initialization
   300                           __initialization:
   301  000C                     psect	dataBANK0,class=BANK0,space=1,noexec
   302                           global __pdataBANK0
   303                           __pdataBANK0:
   304  0022                     	file	"timer0.c"
   305                           	line	14
   306                           _i:
   307  0022                            ds      1
   308  0022                     
   309                           	file	"C:\Users\DHARMA~1\AppData\Local\Temp\s3i0."
   310                           	line	#
   311                           ; Initialize objects allocated to BANK0
   312                           	global __pidataBANK0
   313                           psect cinit,class=CODE,delta=2,merge=1
   314                           	fcall	__pidataBANK0+0		;fetch initializer
   315  000C  2040               	movwf	__pdataBANK0+0&07fh		
   316  000D  00A2               psect cinit,class=CODE,delta=2,merge=1
   317                           global end_of_initialization,__end_of__initialization
   318                           
   319                           ;End of C runtime variable initialization code
   320                           
   321                           end_of_initialization:
   322  000E                     __end_of__initialization:
   323  000E                     clrf status
   324  000E  0183               ljmp _main	;jump to C main() function
   325  000F  283C               psect	cstackCOMMON,class=COMMON,space=1,noexec
   326                           global __pcstackCOMMON
   327                           __pcstackCOMMON:
   328  0000                     ??_IOinit:	; 1 bytes @ 0x0
   329  0000                     ??_timer0Init:	; 1 bytes @ 0x0
   330  0000                     ??_main:	; 1 bytes @ 0x0
   331  0000                     psect	cstackBANK0,class=BANK0,space=1,noexec
   332                           global __pcstackBANK0
   333                           __pcstackBANK0:
   334  0020                     ?_IOinit:	; 1 bytes @ 0x0
   335  0020                     ?_timer0Init:	; 1 bytes @ 0x0
   336  0020                     ?_main:	; 1 bytes @ 0x0
   337  0020                     ?_ISR:	; 1 bytes @ 0x0
   338  0020                     ??_ISR:	; 1 bytes @ 0x0
   339  0020                     	ds	2
   340  0020                     ;!
   341                           ;!Data Sizes:
   342                           ;!    Strings     0
   343                           ;!    Constant    0
   344                           ;!    Data        1
   345                           ;!    BSS         0
   346                           ;!    Persistent  0
   347                           ;!    Stack       0
   348                           ;!
   349                           ;!Auto Spaces:
   350                           ;!    Space          Size  Autos    Used
   351                           ;!    COMMON            0      0       0
   352                           ;!    BANK0            62      2       3
   353                           
   354                           ;!
   355                           ;!Pointer List with Targets:
   356                           ;!
   357                           ;!    None.
   358                           
   359                           
   360                           ;!
   361                           ;!Critical Paths under _main in COMMON
   362                           ;!
   363                           ;!    None.
   364                           ;!
   365                           ;!Critical Paths under _ISR in COMMON
   366                           ;!
   367                           ;!    None.
   368                           ;!
   369                           ;!Critical Paths under _main in BANK0
   370                           ;!
   371                           ;!    None.
   372                           ;!
   373                           ;!Critical Paths under _ISR in BANK0
   374                           ;!
   375                           ;!    None.
   376                           
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   379 ;;
   380                           
   381                           ;!
   382                           ;!Call Graph Tables:
   383                           ;!
   384                           ;! ---------------------------------------------------------------------------------
   385                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   386                           ;! ---------------------------------------------------------------------------------
   387                           ;! (0) _main                                                 0     0      0       0
   388                           ;!                             _IOinit
   389                           ;!                         _timer0Init
   390                           ;! ---------------------------------------------------------------------------------
   391                           ;! (1) _timer0Init                                           0     0      0       0
   392                           ;! ---------------------------------------------------------------------------------
   393                           ;! (1) _IOinit                                               0     0      0       0
   394                           ;! ---------------------------------------------------------------------------------
   395                           ;! Estimated maximum stack depth 1
   396                           ;! ---------------------------------------------------------------------------------
   397                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   398                           ;! ---------------------------------------------------------------------------------
   399                           ;! (2) _ISR                                                  2     2      0       0
   400                           ;!                                              0 BANK0      2     2      0
   401                           ;! ---------------------------------------------------------------------------------
   402                           ;! Estimated maximum stack depth 2
   403                           ;! ---------------------------------------------------------------------------------
   404                           ;!
   405                           ;! Call Graph Graphs:
   406                           ;!
   407                           ;! _main (ROOT)
   408                           ;!   _IOinit
   409                           ;!   _timer0Init
   410                           ;!
   411                           ;! _ISR (ROOT)
   412                           ;!
   413                           
   414                           ;! Address spaces:
   415                           
   416                           ;!Name               Size   Autos  Total    Cost      Usage
   417                           ;!SFR1                 0      0       0       2        0.0%
   418                           ;!BITSFR1              0      0       0       2        0.0%
   419                           ;!BANK0               3E      2       3       4        4.8%
   420                           ;!BITBANK0            3E      0       0       3        0.0%
   421                           ;!SFR0                 0      0       0       1        0.0%
   422                           ;!BITSFR0              0      0       0       1        0.0%
   423                           ;!COMMON               0      0       0       1        0.0%
   424                           ;!BITCOMMON            0      0       0       0        0.0%
   425                           ;!CODE                 0      0       0       0        0.0%
   426                           ;!DATA                 0      0       3       6        0.0%
   427                           ;!ABS                  0      0       3       5        0.0%
   428                           ;!NULL                 0      0       0       0        0.0%
   429                           ;!STACK                0      0       0       2        0.0%
   430                           ;!EEDATA              80      0       0       0        0.0%
   431                           
   432                           	global	_main
   433                           
   434 ;; *************** function _main *****************
   435 ;; Defined at:
   436 ;;		line 37 in file "timer0.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		status,2, status,0, pclath, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : B00/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0
   450 ;;      Params:         0       0
   451 ;;      Locals:         0       0
   452 ;;      Temps:          0       0
   453 ;;      Totals:         0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels required when called:    2
   456 ;; This function calls:
   457 ;;		_IOinit
   458 ;;		_timer0Init
   459 ;; This function is called by:
   460 ;;		Startup code after reset
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   464                           	file	"timer0.c"
   465                           	line	37
   466                           global __pmaintext
   467                           __pmaintext:	;psect for function _main
   468  003C                     psect	maintext
   469                           	file	"timer0.c"
   470                           	line	37
   471                           	global	__size_of_main
   472                           	__size_of_main	equ	__end_of_main-_main
   473  0004                     	
   474                           _main:	
   475  003C                     ;incstack = 0
   476                           	opt	stack 6
   477                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   478                           	line	38
   479                           	
   480                           l665:	
   481  003C                     ;timer0.c: 38:     IOinit();
   482                           	fcall	_IOinit
   483  003C  2035               	line	39
   484                           ;timer0.c: 39:     timer0Init();
   485                           	fcall	_timer0Init
   486  003D  2027               	line	40
   487                           ;timer0.c: 40:     while(1);
   488                           	
   489                           l45:	
   490  003E                     	
   491                           l46:	
   492  003E                     	goto	l45
   493  003E  283E               	
   494                           l47:	
   495  003F                     	line	42
   496                           ;timer0.c: 41:     return;
   497                           	
   498                           l48:	
   499  003F                     	global	start
   500                           	ljmp	start
   501  003F  280B               	opt stack 0
   502                           GLOBAL	__end_of_main
   503                           	__end_of_main:
   504  0040                     	signat	_main,89
   505                           	global	_timer0Init
   506                           
   507 ;; *************** function _timer0Init *****************
   508 ;; Defined at:
   509 ;;		line 23 in file "timer0.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		status,2
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0
   523 ;;      Params:         0       0
   524 ;;      Locals:         0       0
   525 ;;      Temps:          0       0
   526 ;;      Totals:         0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:    1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   537                           	line	23
   538                           global __ptext1
   539                           __ptext1:	;psect for function _timer0Init
   540  0027                     psect	text1
   541                           	file	"timer0.c"
   542                           	line	23
   543                           	global	__size_of_timer0Init
   544                           	__size_of_timer0Init	equ	__end_of_timer0Init-_timer0Init
   545  000E                     	
   546                           _timer0Init:	
   547  0027                     ;incstack = 0
   548                           	opt	stack 6
   549                           ; Regs used in _timer0Init: [status,2]
   550                           	line	24
   551                           	
   552                           l653:	
   553  0027                     ;timer0.c: 24:     T0CS = 0;
   554                           	bsf	status, 5	;RP0=1, select bank1
   555  0027  1683               	bcf	(1037/8)^080h,(1037)&7	;volatile
   556  0028  1281               	line	25
   557                           ;timer0.c: 25:     T0SE = 0;
   558                           	bcf	(1036/8)^080h,(1036)&7	;volatile
   559  0029  1201               	line	26
   560                           ;timer0.c: 26:     PSA = 0;
   561                           	bcf	(1035/8)^080h,(1035)&7	;volatile
   562  002A  1181               	line	27
   563                           ;timer0.c: 27:     PS0 = 1;
   564                           	bsf	(1032/8)^080h,(1032)&7	;volatile
   565  002B  1401               	line	28
   566                           ;timer0.c: 28:     PS1 = 1;
   567                           	bsf	(1033/8)^080h,(1033)&7	;volatile
   568  002C  1481               	line	29
   569                           ;timer0.c: 29:     PS2 = 1;
   570                           	bsf	(1034/8)^080h,(1034)&7	;volatile
   571  002D  1501               	line	30
   572                           	
   573                           l655:	
   574  002E                     ;timer0.c: 30:     TMR0 = 0;
   575                           	bcf	status, 5	;RP0=0, select bank0
   576  002E  1283               	clrf	(1)	;volatile
   577  002F  0181               	line	31
   578                           	
   579                           l657:	
   580  0030                     ;timer0.c: 31:     T0IF = 0;
   581                           	bcf	(90/8),(90)&7	;volatile
   582  0030  110B               	line	32
   583                           	
   584                           l659:	
   585  0031                     ;timer0.c: 32:     T0IE = 1;
   586                           	bsf	(93/8),(93)&7	;volatile
   587  0031  168B               	line	33
   588                           	
   589                           l661:	
   590  0032                     ;timer0.c: 33:     PEIE = 1;
   591                           	bsf	(94/8),(94)&7	;volatile
   592  0032  170B               	line	34
   593                           	
   594                           l663:	
   595  0033                     ;timer0.c: 34:     GIE = 1;
   596                           	bsf	(95/8),(95)&7	;volatile
   597  0033  178B               	line	35
   598                           	
   599                           l40:	
   600  0034                     	return
   601  0034  0008               	opt stack 0
   602                           GLOBAL	__end_of_timer0Init
   603                           	__end_of_timer0Init:
   604  0035                     	signat	_timer0Init,89
   605                           	global	_IOinit
   606                           
   607 ;; *************** function _IOinit *****************
   608 ;; Defined at:
   609 ;;		line 16 in file "timer0.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		status,2
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0
   623 ;;      Params:         0       0
   624 ;;      Locals:         0       0
   625 ;;      Temps:          0       0
   626 ;;      Totals:         0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   637                           	line	16
   638                           global __ptext2
   639                           __ptext2:	;psect for function _IOinit
   640  0035                     psect	text2
   641                           	file	"timer0.c"
   642                           	line	16
   643                           	global	__size_of_IOinit
   644                           	__size_of_IOinit	equ	__end_of_IOinit-_IOinit
   645  0007                     	
   646                           _IOinit:	
   647  0035                     ;incstack = 0
   648                           	opt	stack 6
   649                           ; Regs used in _IOinit: [status,2]
   650                           	line	17
   651                           	
   652                           l651:	
   653  0035                     ;timer0.c: 17:     TRISA = 0;
   654                           	bsf	status, 5	;RP0=1, select bank1
   655  0035  1683               	clrf	(133)^080h	;volatile
   656  0036  0185               	line	18
   657                           ;timer0.c: 18:     TRISC = 0;
   658                           	clrf	(135)^080h	;volatile
   659  0037  0187               	line	19
   660                           ;timer0.c: 19:     PORTA = 0;
   661                           	bcf	status, 5	;RP0=0, select bank0
   662  0038  1283               	clrf	(5)	;volatile
   663  0039  0185               	line	20
   664                           ;timer0.c: 20:     PORTC = 0;
   665                           	clrf	(7)	;volatile
   666  003A  0187               	line	21
   667                           	
   668                           l37:	
   669  003B                     	return
   670  003B  0008               	opt stack 0
   671                           GLOBAL	__end_of_IOinit
   672                           	__end_of_IOinit:
   673  003C                     	signat	_IOinit,89
   674                           	global	_ISR
   675                           
   676 ;; *************** function _ISR *****************
   677 ;; Defined at:
   678 ;;		line 44 in file "timer0.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		status,2
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0
   692 ;;      Params:         0       0
   693 ;;      Locals:         0       0
   694 ;;      Temps:          0       2
   695 ;;      Totals:         0       2
   696 ;;Total ram usage:        2 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		Interrupt level 1
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
   705                           	line	44
   706                           global __ptext3
   707                           __ptext3:	;psect for function _ISR
   708  0010                     psect	text3
   709                           	file	"timer0.c"
   710                           	line	44
   711                           	global	__size_of_ISR
   712                           	__size_of_ISR	equ	__end_of_ISR-_ISR
   713  0017                     	
   714                           _ISR:	
   715  0010                     ;incstack = 0
   716                           	opt	stack 6
   717                           ; Regs used in _ISR: [status,2]
   718                           psect	intentry,class=CODE,delta=2
   719                           global __pintentry
   720                           __pintentry:
   721  0004                     global interrupt_function
   722                           interrupt_function:
   723  0004                     	global saved_w
   724                           	saved_w	set	btemp+0
   725  005E                     	movwf	saved_w
   726  0004  00DE               	swapf	status,w
   727  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
   728  0006  1283               	movwf	(??_ISR+0)
   729  0007  00A0               	movf	pclath,w
   730  0008  080A               	movwf	(??_ISR+1)
   731  0009  00A1               	ljmp	_ISR
   732  000A  2810               psect	text3
   733                           	line	45
   734                           	
   735                           i1l667:	
   736  0010                     ;timer0.c: 45:     if(T0IF){
   737                           	btfss	(90/8),(90)&7	;volatile
   738  0010  1D0B               	goto	u4_21
   739  0011  2813               	goto	u4_20
   740  0012  2814               u4_21:
   741  0013                     	goto	i1l54
   742  0013  2820               u4_20:
   743  0014                     	line	46
   744                           	
   745                           i1l669:	
   746  0014                     ;timer0.c: 46:         RA0 = i;
   747                           	btfsc	(_i),0
   748  0014  1822               	goto	u5_21
   749  0015  2817               	goto	u5_20
   750  0016  281A               	
   751                           u5_21:
   752  0017                     	bcf	status, 5	;RP0=0, select bank0
   753  0017  1283               	bsf	(40/8),(40)&7	;volatile
   754  0018  1405               	goto	u6_24
   755  0019  281C               u5_20:
   756  001A                     	bcf	status, 5	;RP0=0, select bank0
   757  001A  1283               	bcf	(40/8),(40)&7	;volatile
   758  001B  1005               u6_24:
   759  001C                     	line	47
   760                           ;timer0.c: 47:         i = ~i;
   761                           	comf	(_i),f
   762  001C  09A2               	line	48
   763                           	
   764                           i1l671:	
   765  001D                     ;timer0.c: 48:         TMR0 = 0;
   766                           	clrf	(1)	;volatile
   767  001D  0181               	line	49
   768                           	
   769                           i1l673:	
   770  001E                     ;timer0.c: 49:         T0IF = 0;
   771                           	bcf	(90/8),(90)&7	;volatile
   772  001E  110B               	goto	i1l54
   773  001F  2820               	line	50
   774                           ;timer0.c: 50:     }
   775                           	
   776                           i1l53:	
   777  0020                     	line	51
   778                           	
   779                           i1l54:	
   780  0020                     	movf	(??_ISR+1),w
   781  0020  0821               	movwf	pclath
   782  0021  008A               	swapf	(??_ISR+0)^00h,w
   783  0022  0E20               	movwf	status
   784  0023  0083               	swapf	saved_w,f
   785  0024  0EDE               	swapf	saved_w,w
   786  0025  0E5E               	retfie
   787  0026  0009               	opt stack 0
   788                           GLOBAL	__end_of_ISR
   789                           	__end_of_ISR:
   790  0027                     	signat	_ISR,89
   791                           global	___latbits
   792                           ___latbits	equ	0
   793  0000                     	global	btemp
   794                           	btemp set 05Eh
   795  005E                     
   796                           	DABS	1,94,2	;btemp
   797                           	global	wtemp0
   798                           	wtemp0 set btemp+0
   799  005E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      2       3

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _IOinit
                         _timer0Init
 ---------------------------------------------------------------------------------
 (1) _timer0Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IOinit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IOinit
   _timer0Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E      2       3       4        4.8%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       3       6        0.0%
ABS                  0      0       3       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jul 05 13:59:38 2019

                      _i 0022              __CFG_CP$OFF 0000                       l40 0034  
                     l37 003B                       l45 003E                       l46 003E  
                     l47 003F                       l48 003F                      l651 0035  
                    l661 0032                      l653 0027                      l663 0033  
                    l655 002E                      l657 0030                      l665 003C  
                    l659 0031                      _GIE 005F                      _RA0 0028  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
           __CFG_CPD$OFF 0000                      _ISR 0010                      _PSA 040B  
                   ?_ISR 0020                     _T0IE 005D                     _T0IF 005A  
                   _T0CS 040D                     _T0SE 040C                     _PEIE 005E  
                   i1l53 0020                     i1l54 0020                     _TMR0 0001  
                   u4_20 0014                     u4_21 0013                     u5_20 001A  
                   u5_21 0017                     u6_24 001C                     _main 003C  
                   btemp 005E            __CFG_BOREN$ON 0000                     start 000B  
                  ??_ISR 0020                    ?_main 0020            __CFG_WDTE$OFF 0000  
                  i1l671 001D                    i1l673 001E                    i1l667 0010  
                  i1l669 0014                    _PORTA 0005                    _PORTC 0007  
                  _TRISA 0085                    _TRISC 0087            __CFG_PWRTE$ON 0000  
                  pclath 000A                    status 0003                    wtemp0 005E  
         __CFG_MCLRE$OFF 0000          __initialization 000C             __end_of_main 0040  
                 ??_main 0000                   _IOinit 0035                   saved_w 005E  
__end_of__initialization 000E           __pcstackCOMMON 0000             __pidataBANK0 0040  
                ?_IOinit 0020               __pmaintext 003C               __pintentry 0004  
        __size_of_IOinit 0007                  __ptext1 0027                  __ptext2 0035  
                __ptext3 0010             __size_of_ISR 0017     end_of_initialization 000E  
             _timer0Init 0027           __end_of_IOinit 003C      start_initialization 000C  
            __end_of_ISR 0027                 ??_IOinit 0000              ?_timer0Init 0020  
            __pdataBANK0 0022                ___latbits 0000            __pcstackBANK0 0020  
    __size_of_timer0Init 000E        interrupt_function 0004            __size_of_main 0004  
           ??_timer0Init 0000       __end_of_timer0Init 0035                 intlevel1 0000  
      __CFG_FOSC$INTRCIO 0000  
